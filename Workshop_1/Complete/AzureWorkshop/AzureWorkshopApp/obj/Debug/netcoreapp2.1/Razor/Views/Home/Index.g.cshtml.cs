#pragma checksum "C:\Repos\azure-workshops\Workshop_1\Complete\AzureWorkshop\AzureWorkshopApp\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5e622b0564efe7d9572bd3aee6688975328364ac"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Repos\azure-workshops\Workshop_1\Complete\AzureWorkshop\AzureWorkshopApp\Views\_ViewImports.cshtml"
using AzureWorkshopApp;

#line default
#line hidden
#line 2 "C:\Repos\azure-workshops\Workshop_1\Complete\AzureWorkshop\AzureWorkshopApp\Views\_ViewImports.cshtml"
using AzureWorkshopApp.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5e622b0564efe7d9572bd3aee6688975328364ac", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a16b17181c5be08c210b6baf33598f5c97b3071a", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("/api/images/upload"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("dropzone needsclick dz-clickable"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("image-upload"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Repos\azure-workshops\Workshop_1\Complete\AzureWorkshop\AzureWorkshopApp\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
            BeginContext(45, 1618, true);
            WriteLiteral(@"
<!-- Client side libs required  -->
<link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.1.1/min/dropzone.min.css"" crossorigin=""anonymous"">

<style>
    html {
        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
    }

    main {
        margin: 20px;
        text-align: center;
    }

    .stored-images {
        display: flex;
        flex-wrap: wrap;
        flex-direction: row;
    }

    .image-wrapper {
        width: 20%;/*calc(20% - 30px);*/
        margin: auto;
    }

    .image {
        width: 20vw;
        margin: 10px;
        -webkit-box-shadow: 2px 2px 5px -1px rgba(0,0,0,0.48);
        -moz-box-shadow: 2px 2px 5px -1px rgba(0,0,0,0.48);
        box-shadow: 2px 2px 5px -1px rgba(0,0,0,0.48);
    }

    .dropzone {
        border: 3px dashed #D5C383;
        background: #8E7931;
        color: #D5C383;
        margin: 25px;
        border-radius: 5px;
        max-width: 4");
            WriteLiteral(@"00px;
    }

        .dropzone .dz-message {
            font-weight: 350;
        }

            .dropzone .dz-message .note {
                font-family: sans-serif;
                font-size: 18px;
                font-weight: 200;
                display: block;
                margin-top: 1.5rem;
            }
</style>


<main>
    <div class=""box header"">
        <h1><span class=""fa fa-user-circle-o""></span> <span id=""page-title"">Blob storage</span></h1>
    </div>

    <div class=""box content "">
        <hr>
        <div class=""center-block"">
            ");
            EndContext();
            BeginContext(1663, 451, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "272357506df2437b90de0e136c1cd2a0", async() => {
                BeginContext(1871, 236, true);
                WriteLiteral("\r\n\r\n                <div class=\"dz-message needsclick\">\r\n                    <span class=\"note needsclick\">\r\n                        Drop images here or click to upload.\r\n                    </span>\r\n                </div>\r\n            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2114, 3421, true);
            WriteLiteral(@"
        </div>
        <!-- <p><span id=""gallery-note"">Gallery refreshes from storage container image links every 5 seconds.</span></p> -->
        <div id=""stored-images""></div>


    </div>
</main>

<script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.1.1/min/dropzone.min.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js""></script>

<script>
    // init gallery for later use
    var gallery = [];

    // Grab links for images from backend api
    function fetchImageLinks() {
        // Fetch images
        $.get(""api/Images/thumbnails"", function (fetchedImageLinks) {
            console.log(fetchedImageLinks)

            // Check if anything is in there
            if (_.isEmpty(fetchedImageLinks)) {
                console.log('empty fetched')
                // do nothing
            } else {
                // Check if we ha");
            WriteLiteral(@"ve a gallery initialized

                // check if images are equal to array
                console.log('currently in gallery:')

                var imageLinksEqual = _.isEqual(_.sortBy(gallery.map(s => s.split(""?"")[0])), _.sortBy(fetchedImageLinks.map(s => s.split(""?"")[0])))
                if (imageLinksEqual) {
                    console.log('images arr are equal')
                    // do nothing
                } else {
                    console.log('images arr are not equal')

                    // update gallery with new image urls. Only compare actual url without SAS token query string
                    var newImageLinks = _.difference(fetchedImageLinks.map(s => s.split(""?"")[0]), gallery.map(s => s.split(""?"")[0]))

                    console.log('differene is: ')
                    console.log(newImageLinks)
                    // Only add new images

                    var divContainer = document.getElementById(""stored-images"");

                    _.forEach(newIm");
            WriteLiteral(@"ageLinks, x => {

                        var imageWrapper = document.createElement(""span"");
                        imageWrapper.className = ""image-wrapper"";

                        var imageElement = document.createElement(""img"");
                        imageElement.src = x;
                        imageElement.className = ""image"";

                        imageWrapper.appendChild(imageElement);

                        divContainer.appendChild(imageWrapper);
                    });

                    gallery = fetchedImageLinks;
                }

            }
        });
    }

    // Start first interval
    fetchImageLinks()

    setInterval(function () {
        fetchImageLinks()
    }, 5000)

    /* Dropzone */
    // ""imageUpload"" is the camelized version of the HTML element's ID
    Dropzone.options.imageUpload = {
        paramName: ""files"", // The name that will be used to transfer the file
        dictDefaultMessage: ""Drop files here or Click to Upload"",
    ");
            WriteLiteral(@"    addRemoveLinks: true, // Allows for cancellation of file upload and remove thumbnail
        init: function () {
            myDropzone = this;
            myDropzone.on(""success"", function (file, response) {
                console.log(""Success"");
                myDropzone.removeFile(file);
            });
        }
    };
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
